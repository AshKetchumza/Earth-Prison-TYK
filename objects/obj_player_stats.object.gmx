<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the player's stats
hp = 100;
maxhp = hp;
stamina = 10;
maxstamina = stamina;
expr = 0;
maxexpr = 100;
level = 1;
weapon_sprite = obj_player.weapon_sprite;
weapon_damage = 1;
attack = 15;
draw_set_color(c_white);


//Get the player's xstart and ystart
if (instance_exists(obj_player)){
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
} else {
    player_xstart = 0;
    player_ystart = 0;
}

//Save the previous room
previous_room = room;

room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stamina regen alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control the stats
if (hp &lt;= 0) {
    hp = 0;
}

//Stamina regen
if (stamina &lt; maxstamina and alarm[0] == -1){
    stamina++;
}

//Pause the game
if(obj_input.pause_key){
    if(room != rm_pause){
        if(instance_exists(obj_player)){
            obj_player.persistent = false;
        }
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
    } else {
        room_goto(previous_room);
    }
    obj_input.pause_key = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember the player's start position
if (room == rm_pause || room == rm_main_menu) exit;

switch (room_start_action){
    case RETURN:
        break;
        
    case NEW_ROOM:
    default:
        if (instance_exists(obj_player)){
            player_xstart = obj_player.x;
            player_ystart = obj_player.y;
        }
        break;
        
    case LOAD:
        scr_load_game();
        break;
}

room_persistent = false;
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the stats
var total_damage = attack + weapon_damage;
//Health
draw_text(32, 18, "Health");
draw_sprite(spr_hb_bg,1,32,34);
draw_sprite_ext(spr_hb_inner,1,32,34,hp/maxhp,1,0,c_white,1); 
draw_sprite(spr_border,1,32,34);
//Energy
draw_text(32, 50, "Energy");
draw_sprite(spr_stamina_bg,1,32,66);
draw_sprite_ext(spr_stamina_inner,1,32,66,stamina/maxstamina,1,0,c_white,1); 
draw_sprite(spr_border,1,32,66);
//XP
draw_text(32, 82, "Level:" + string(level));
draw_sprite(spr_xp_bg,1,32,98);
draw_sprite_ext(spr_xp_inner,1,32,98,expr/maxexpr,1,0,c_white,1); 
draw_sprite(spr_border,1,32,98);
//Attack damage, weapon damage and total damage
draw_text(32, 114, "Attack: " + string(attack));
draw_text(32, 130, "Weapon: " + string(weapon_damage));
draw_text(32, 146, "Total: " + string(total_damage));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
